= simple_form_for [tender, winner_protocol] do |f|
  = error_messages_for winner_protocol

  .row
    .span2= f.input :num, input_html: { class: 'input-block-level' }
    .span2.offset8= f.input :confirm_date, as: :string,
      input_html: { value: f.object.confirm_date, class: 'datepicker input-block-level' }

  .row
    .span12= f.input :violation_reason, input_html: { class: 'input-block-level' }

  legend = t('.lots')
  table.table.table-bordered.table-striped
    thead
      tr
        th
        th = t('.table.name')
        th = t('.table.cost')
        th = t('.table.solution')
    tbody
      = f.simple_fields_for :winner_protocol_lots, winner_protocol.initialized_winner_protocol_lots do |wpl|
        - winner_protocol_lot = wpl.object.decorate
        tr
          td
            = wpl.check_box :enable, readonly: !Constants::LotStatus::FOR_WP.include?(winner_protocol_lot.lot_status_id)
            = wpl.hidden_field :lot_id
            = wpl.hidden_field :winner_protocol_id
          td = winner_protocol_lot.lot_name_with_cust
          td.right-cell = p_money winner_protocol_lot.lot_specs_cost
          td.span3.solution
            - if can?(:update, wpl.object)
              = wpl.input :solution_type_id, collection: winner_protocol_lot.solutions, label: false,
                include_blank: false,
                input_html: { class: 'input-block-level wpl-solution-types' }
              .wpl-winner-info
                == winner_protocol_lot.lot.winner_info
            - else
              = winner_protocol_lot.solution

  .form-actions
    => link_to t('cancel'), tender_winner_protocols_path(tender), class: 'btn btn-warning'
    = f.submit t('save'), class: 'btn btn-primary'

  - if tender.regulated?
    #modal_caution.modal.hide.fade
      .modal-header
        button.close data-dismiss="modal" Ã—
        h3 = t('.caution_title')
      .modal-body
        = raw t('.caution_body')
