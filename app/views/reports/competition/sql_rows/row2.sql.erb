-- row 2 Закупки с неподведенными итогами
select
  sum(decode(l.main_direction_id, s.direction_id, 1, 0)) as count_lots,
  sum(nvl(gkpz_ps.qty * gkpz_ps.cost_nds, s.qty * s.cost)) as cost_lots
from tenders t
  inner join lots l on (t.id = l.tender_id)
  inner join specifications s on (s.lot_id = l.id)
  left join winner_protocols wp on (wp.id = l.winner_protocol_id)
  left join plan_lots pl on (pl.id = l.plan_lot_id)
  left join plan_specifications ps on (ps.plan_lot_id = pl.id and s.plan_specification_id = ps.id)
  left join
    (select * from
      (select tpl.*, row_number() over (partition by tpl.guid order by tpl.status_id desc, tp.date_confirm desc) rn
        from plan_lots tpl
        inner join protocols tp on tp.id = tpl.protocol_id and tp.date_confirm < :end_date
        where tpl.status_id in (<%= Constants::PlanLotStatus::AGREEMENT_LIST.join(', ') %>))
       where rn = 1) gkpz_pl on (pl.guid = gkpz_pl.guid)
  left join plan_specifications gkpz_ps on (gkpz_ps.guid = ps.guid and gkpz_ps.plan_lot_id = gkpz_pl.id)

  left join (
    select tpl.guid, max(tp.date_confirm) as can_date
    from plan_lots tpl
    inner join protocols tp on tp.id = tpl.protocol_id and tp.date_confirm < :end_date
    inner join commissions tc on tp.commission_id = tc.id
    where tpl.status_id = <%= Constants::PlanLotStatus::CANCELED %>
      And tc.commission_type_id = <%= Constants::CommissionType::CZK %>
    group by tpl.guid
  ) can on gkpz_pl.guid = can.guid


  left join (
    select max(tp.date_confirm) as sd_date, tc.department_id, tp.gkpz_year
    from protocols tp
    inner join commissions tc on tp.commission_id = tc.id
    where tc.commission_type_id = <%= Constants::CommissionType::SD %>
    and tp.date_confirm < :end_date
    group by tc.department_id, tp.gkpz_year
  ) sd on gkpz_pl.root_customer_id = sd.department_id and gkpz_pl.gkpz_year = sd.gkpz_year

  inner join
    (select pl1.guid, l1.frame_id, max(t1.announce_date) as max_announce_date
      from tenders t1
      inner join lots l1 on (t1.id = l1.tender_id)
      left join plan_lots pl1 on (l1.plan_lot_id = pl1.id)
      where t1.announce_date between :begin_date and :end_date
      group by pl1.guid, l1.frame_id
    ) vi on (vi.guid = pl.guid or l.frame_id = vi.frame_id) and vi.max_announce_date = t.announce_date

Where (wp.confirm_date > :end_date or l.status_id in (<%= Constants::LotStatus::NOT_HELD_WITH_FAIL.join(', ') %>))
  And (sd_date is null or can_date is null or can_date > sd_date)
  And l.gkpz_year in (:gkpz_years)
  And s.customer_id in (Select Id From Departments Start With Id In (:customer) Connect By Prior Id = Parent_Dept_Id)
  And t.tender_type_id not in (<%= [Constants::TenderTypes::FRAMES, Constants::TenderTypes::UNREGULATED].flatten.join(', ') %>)
  And s.direction_id in (:directions)
