@sheet = sheet
@simple_sheet = AxlsxExt::SimpleSheet.new(sheet, 16, @styles)
@outlines = []
@columns = Reports::Other::ExpectedEconomicEffect::GEN_COLUMNS
@column_styles = @columns.values.map { |c| @styles[c[:style]] }
@column_types = @columns.values.map { |c| c[:type] }
@widths = @columns.values.map { |c| c[:width] }
@sum_styles = @columns.values.map do |c|
  case c[:style]
  when :td_money then @styles[:sum_money]
  when :td_percent then @styles[:sum_percent]
  else @styles[:sum]
  end
end
@alt_sum_styles = @columns.values.map do |c|
  case c[:style]
  when :td_money then @styles[:alt_sum_money]
  when :td_percent then @styles[:alt_sum_percent]
  else @styles[:alt_sum]
  end
end

@simple_sheet.add_row_title(t('.title', db: @report.date_begin, de: @report.date_end), style: @styles[:text_left_bold])

sheet.add_row

rows = @simple_sheet.add_rows_from_csv File.expand_path("../csv/gen_head.csv", __FILE__)
rows[0].height = 60
rows[1].height = 30

@report.groups.each do |group|
  render 'gen_group_rows', group: group, nesting_level: 0
end

@outlines.each { |o| sheet.outline_level_rows(o[:start_index], o[:end_index], o[:level], true) }
sheet.column_widths *@widths
