group = {}
@columns.each_pair do |ckey, cvalue|
  group["#{ckey}_total"] = 0 if cvalue[cols_part] && cvalue[cols_part] && cvalue[:sum]
end

@simple_sheet.add_row_title part_name, style: @styles[:group_row_h1], merge_count: 15

row_begin = @sheet.rows.size

rows.each_with_index do |row, i|
  @columns.each_pair do |ckey, cvalue|
    group["#{ckey}_total"] += cvalue[:value].call(row) || 0 if cvalue[cols_part] && cvalue[:sum]
  end
  values = @columns.map do |c|
    if c[0] == :c1
      i + 1
    else
      v = c[1][cols_part] ? c[1][:value].call(row) : nil
      if c[1][cols_part] &&
         c[0] == :c23 &&
         row['gkpz_announce_date'] &&
         row['last_con_announce_date'] &&
         row['gkpz_announce_date'] != row['last_con_announce_date']
        p = Protocol.find_first_confirm_by_announce_date(
          row['guid'],
          row['sd_date'].to_date,
          @report.date_end.to_date,
          row['last_con_announce_date'].to_date
        )

        v = [v, p.decorate.date_moved(row['last_con_announce_date'].to_date)].compact.join("\n") if p
      end
      v
    end
  end

  @sheet.add_row values, style: @column_styles, types: @column_types
end

row_end = @sheet.rows.size

@outlines << { start_index: row_begin, end_index: row_end - 1, level: 1 }

values = @columns.map do |c|
  if c[0] == :c1
    part_sum_name
  else
    c[1][cols_part] && c[1][:sum] ? group["#{c[0]}_total"] : nil
  end
end

row = @sheet.add_row values, style: @sum_styles
@sheet.merge_cells row.cells.first(15)
