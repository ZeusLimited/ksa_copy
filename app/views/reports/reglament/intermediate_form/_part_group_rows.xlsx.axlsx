@columns.each_pair do |ckey, cvalue|
  group["#{ckey}_total"] = 0 if cvalue[cols_part] && cvalue[cols_part] && cvalue[:sum]
end

@simple_sheet.add_row_title (part_name || group['name']), style: @styles["group_row_h#{nesting_level}".to_sym]

if group.key?('children')
  group['children'].each do |child|
    render 'part_group_rows', rows: rows, group: child, cols_part: :part2, nesting_level: nesting_level + 1, part_name: nil
    @columns.each_pair do |ckey, cvalue|
      group["#{ckey}_total"] += child["#{ckey}_total"] || 0 if cvalue[:sum]
    end
  end
end

row_begin = @sheet.rows.size

if group.key?('filter')
  displayed_rows = 0
  row_num = 0
  first_row_merge = nil
  last_row_merge = nil

  result_rows = rows.select do |r|
    r['direction_id'] == group['filter']['direction_id'] &&
      (
        !group['filter'].key?('subject_type_id') ||
        r['subject_type_id'] == group['filter']['subject_type_id']

      )
  end
  result_rows.each_with_index do |row, i|
    displayed_rows = row['cnt_offers'] if displayed_rows == 0

    is_first_row = displayed_rows == row['cnt_offers']

    row_num += 1 if is_first_row

    values = @columns.map do |c|
      if is_first_row
      c[0] == :c1 ? row_num : c[1][cols_part] ? c[1][:value].call(row) : nil
      else
        c[1][:no_merge] && c[1][cols_part] ? c[1][:value].call(row) : nil
      end
    end

    excel_row = @sheet.add_row values, style: @column_styles, types: @column_types

    if is_first_row
      first_row_merge = excel_row
      @columns.each_pair do |ckey, cvalue|
        group["#{ckey}_total"] += cvalue[:value].call(row) || 0 if cvalue[:sum]
      end
    else
      last_row_merge = excel_row
    end

    displayed_rows -= 1
    if displayed_rows == 0 && row['cnt_offers'] > 1
      @columns.each_with_index do |col, index|
        first_row_merge.cells[index].merge last_row_merge.cells[index] unless col[1][:no_merge]
      end
    end

  end
end
row_end = @sheet.rows.size

@outlines << { start_index: row_begin, end_index: row_end - 1, level: 1 }

values = @columns.map do |c|
  if c[0] == :c1
    group['sum_name']
  else
    c[1][cols_part] && c[1][:sum] ? group["#{c[0]}_total"] : nil
  end
end

row = @sheet.add_row values, style: @sum_styles
@sheet.merge_cells row.cells.first(15)
