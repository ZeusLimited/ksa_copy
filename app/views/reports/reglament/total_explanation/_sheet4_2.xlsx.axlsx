@sheet = sheet
@col_count = 6

def print_group(name, options = {})
  values = Array.new(@col_count)
  values[0] = name
  group_row = @sheet.add_row values, options
  @sheet.merge_cells group_row.cells[0..(@col_count - 1)]
  group_row
end

def print_vals(name, name_f, styles)
  col2 = @report.sheet4_row["#{name_f}_cost_nds"]
  col3 = @report.sheet4_row["#{name_f}_pcost_nds"]
  col4 = @report.sheet4_row["#{name_f}_fcost_nds"]

  row_index = @sheet.rows.count + 1

  values = Array.new(@col_count)
  values[0] = name
  values[1] = col2
  values[2] = col3
  values[3] = col4
  values[4] = "=C#{row_index}-D#{row_index}"
  values[5] = "=IF(C#{row_index}=0,0,E#{row_index}/C#{row_index})"

  @sheet.add_row values, style: styles
end

months = "#{@report.months} #{t(:month, count: @report.months)}"

print_group(t('.text1'), style: @styles[:text_left_bold])

sheet.add_row

head_rows = CSV.read('app/views/reports/reglament/total_explanation/csv/head_4_2.csv', col_sep: ';')
rows = []
head_rows.each { |head_row| rows << sheet.add_row(head_row, style: @styles[:th]) }
rows[0].height = 30
rows[1].height = 30
rows[2].height = 15
AxlsxExt::AutoMergeNil.merge_rows(rows)

vals_styles = [
  @styles[:td], @styles[:td_money], @styles[:td_money], @styles[:td_money], @styles[:td_money], @styles[:td_percent]
]
sum_vals_styles = [
  @styles[:sum], @styles[:sum_money], @styles[:sum_money], @styles[:sum_money], @styles[:sum_money], @styles[:sum_percent]
]

print_group t('.r1'), style: @styles[:group_row_h1]

print_group t('.r1_1'), style: @styles[:group_row_h1]
print_vals t('.r1_1_1'), 'ks_services', vals_styles
print_vals t('.r1_1_2'), 'ks_materials', vals_styles
print_vals t('.r1_1_sum'), 'ks', sum_vals_styles

print_group t('.r1_2'), style: @styles[:group_row_h1]
print_vals t('.r1_2_1'), 'tpir_services', vals_styles
print_vals t('.r1_2_2'), 'tpir_materials', vals_styles
print_vals t('.r1_2_sum'), 'tpir', sum_vals_styles

print_group t('.r1_3'), style: @styles[:group_row_h1]
print_vals t('.r1_3_1'), 'it_invest_services', vals_styles
print_vals t('.r1_3_2'), 'it_invest_materials', vals_styles
print_vals t('.r1_3_sum'), 'it_invest', sum_vals_styles

print_group t('.r1_4'), style: @styles[:group_row_h1]
print_vals t('.r1_4_sum'), 'niokr_invest', sum_vals_styles

print_group t('.r1_5'), style: @styles[:group_row_h1]
print_vals t('.r1_5_sum'), 'inivp_invest', sum_vals_styles

sum_rows = %w(10 14 18 20 22)
formula = ->(rows, column) { "=#{rows.map { |r| "#{column}#{r}" }.join('+')}" }

sheet.add_row [
  t('.r1_sum'),
  formula.call(sum_rows, 'B'),
  formula.call(sum_rows, 'C'),
  formula.call(sum_rows, 'D'),
  formula.call(sum_rows, 'E'),
  "=IF(C23=0,0,E23/C23)"
], style: sum_vals_styles

print_group t('.r2'), style: @styles[:group_row_h1]

print_group t('.r2_1'), style: @styles[:group_row_h1]
print_vals t('.r2_1_1'), 'erp_services', vals_styles
print_vals t('.r2_1_2'), 'erp_materials', vals_styles
print_vals t('.r2_1_sum'), 'erp', sum_vals_styles

print_group t('.r2_2'), style: @styles[:group_row_h1]
print_vals t('.r2_2_1'), 'it_other_services', vals_styles
print_vals t('.r2_2_2'), 'it_other_materials', vals_styles
print_vals t('.r2_2_sum'), 'it_other', sum_vals_styles

print_group t('.r2_3'), style: @styles[:group_row_h1]
print_vals t('.r2_3_1'), 'er_services', vals_styles
print_vals t('.r2_3_2'), 'er_materials', vals_styles
print_vals t('.r2_3_sum'), 'er', sum_vals_styles

print_group t('.r2_4'), style: @styles[:group_row_h1]
print_vals t('.r2_4_sum'), 'fuel', sum_vals_styles

print_group t('.r2_5'), style: @styles[:group_row_h1]
print_vals t('.r2_5_sum'), 'niokr_other', sum_vals_styles

print_group t('.r2_6'), style: @styles[:group_row_h1]
print_vals t('.r2_6_sum'), 'inivp_other', sum_vals_styles

print_group t('.r2_7'), style: @styles[:group_row_h1]
print_vals t('.r2_7_sum'), 'axn', sum_vals_styles

print_group t('.r2_8'), style: @styles[:group_row_h1]
print_vals t('.r2_8_sum'), 'osu', sum_vals_styles

print_group t('.r2_9'), style: @styles[:group_row_h1]
print_vals t('.r2_9_sum'), 'other', sum_vals_styles

sum_rows = %w(28 32 36 38 40 42 44 46 48)
sheet.add_row [
  t('.r2_sum'),
  formula.call(sum_rows, 'B'),
  formula.call(sum_rows, 'C'),
  formula.call(sum_rows, 'D'),
  formula.call(sum_rows, 'E'),
  "=IF(C49=0,0,E49/C49)"
], style: sum_vals_styles

sum_rows = %w(23 49)
sheet.add_row [
  t('.sum'),
  formula.call(sum_rows, 'B'),
  formula.call(sum_rows, 'C'),
  formula.call(sum_rows, 'D'),
  formula.call(sum_rows, 'E'),
  "=IF(C50=0,0,E50/C50)"
], style: sum_vals_styles

sheet.add_row

print_group(t('.text2'), style: @styles[:text_left])

sheet.column_widths 50, 20, 20, 20, 20, 20
